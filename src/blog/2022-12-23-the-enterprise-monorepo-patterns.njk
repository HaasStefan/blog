---
title: The Enterprise Monorepo Angular Patterns
subtitle: Leverage the full potential of Nx with Eslint rules and the Enterprise Monorepo Patterns
date: 2022-12-23
tags: featured
description: Nx is a commonly used tool for monorepositories and is the top dog in the Angular community when it comes to building enterprise applications. Nx has many awesome features that help with scaling enterprise applications, but the greatest feature of them all is the nx/enforce-module-boundaries linting rule (also often referred to as access restrictions). When set up correctly, it allows for enforcing architecture rules and for automated validation with the linter. But these access restrictions assume a very specific structuring which follows fine-grained horizontal and vertical slicing. 
keywords: [angular, nx, eslint, ddd, enterprise-monorepo-patterns, access-restrictions, enforce-module-boundaries]
image: https://i.imgur.com/TbEGhZs.png
imageAlt:  cover-image
layout: post
---

<p>
    {{description}}
</p>

{% set subHeading = 'Horizontal Slicing' %}
{% include 'post-elements/sub-heading.njk' %}

<p>
    Horizontal Slicing is obviously very important in every enterprise application independent of the enterprise monorepo patterns.
    It is just about slicing a big monolith into subsystems, often referred to domains or subdomains, especially if you follow principles of Domain Driven Design, such as Strategic Design, which gives some very useful tools to find a good horizontal slicing.
    In the case of an insurance CRM, which manages claims, contracts, customers, complaints and notifications, we would split this system into said subdomains. 
</p>

{% set image = 'https://i.imgur.com/BKaIqNy.png' %}
{% set imageAlt = 'result' %} 
{% set maxHeight = undefined %}
{% set imageCaption = undefined %}
{% include 'post-elements/image.njk' %}


{% set subHeading = 'Vertical Slicing' %}
{% include 'post-elements/sub-heading.njk' %}

{% set image = 'https://i.imgur.com/vkCJ2YQ.png' %}
{% set imageAlt = 'result' %} 
{% set maxHeight = undefined %}
{% set imageCaption = undefined %}
{% include 'post-elements/image.njk' %}

{% set subHeading = 'Eslint Rules' %}
{% include 'post-elements/sub-heading.njk' %}


{% set code %}"@nrwl/nx/enforce-module-boundaries": [
  "error",
  {
    "enforceBuildableLibDependency": true,
    "allow": [],
    "depConstraints": [
      {
        "sourceTag": "type:app",
        "onlyDependOnLibsWithTags": [
          "type:api",
          "type:feature",
          "type:ui",
          "type:data-access",
          "type:util"
        ]
      },
      {
        "sourceTag": "type:api",
        "onlyDependOnLibsWithTags": [
          "type:ui",
          "type:data-access",
          "type:util"
        ]
      },
      {
        "sourceTag": "type:feature",
        "onlyDependOnLibsWithTags": [
          "type:ui",
          "type:data-access",
          "type:util",
          "type:api",
          "type:anti-corruption-layer"
        ]
      },
      {
        "sourceTag": "type:ui",
        "onlyDependOnLibsWithTags": [
          "type:data-access",
          "type:util",
          "type:anti-corruption-layer"
        ]
      },
      {
        "sourceTag": "type:data-access",
        "onlyDependOnLibsWithTags": [
          "type:util",
        ]
      },
      {
        "sourceTag": "domain:shared",
        "onlyDependOnLibsWithTags": ["domain:shared"]
      },
      {
        "sourceTag": "domain:claim",
        "onlyDependOnLibsWithTags": ["domain:claim", "domain:shared"]
      },
      {
        "sourceTag": "domain:contract",
        "onlyDependOnLibsWithTags": [
          "domain:contract",
          "domain:shared",
          "domain:claim/api-contract",
          "domain:complaint/api-contract"
        ]
      },
      {
        "sourceTag": "domain:notification",
        "onlyDependOnLibsWithTags": [
          "domain:notification",
          "domain:shared"
        ]
      },
      {
        "sourceTag": "domain:complaint",
        "onlyDependOnLibsWithTags": [
          "domain:complaint",
          "domain:shared"
        ]
      },
      {
        "sourceTag": "domain:customer",
        "onlyDependOnLibsWithTags": [
          "domain:customer",
          "domain:shared",
          "domain:notification/api-customer"
        ]
      }
    ]
  }
]{% endset %}
{% set lang = 'json' %}
{% set caption = 'eslintrc.json' %}
{% include 'post-elements/code.njk' %}

{% set subHeading = 'Nx Graph' %}
{% include 'post-elements/sub-heading.njk' %}

<p>
    Another really awesome tool of Nx is the interactive Nx Graph, which shows you all the dependencies very intuitively. 
    Grouping by folder, we can get a good image of the current architecture of our application and even can focus specific libraries.
    With Nx 15.3.0, we can now even visualize the <b>Task Graph</b>, which might be of big interest to you, if you use buildable libraries and a remote Nx cache. 

    Read more on 
    {% set link = 'https://nx.dev/more-concepts/incremental-builds' %}
    {% set linkText = 'Incremental Builds' %}
    {% include 'post-elements/hyper-link.njk' %}.

</p>

{% set image = 'https://i.imgur.com/H0wQFux.png' %}
{% set imageAlt = 'result' %} 
{% set maxHeight = undefined %}
{% set imageCaption = 'nx graph' %}
{% include 'post-elements/image.njk' %}


{% set subHeading = 'Honorable Mentions' %}
{% include 'post-elements/sub-heading.njk' %}

{% set subSubHeading = 'I. @angular-architects/ddd' %}
{% include 'post-elements/sub-sub-heading.njk' %}

<p>
    The 
    {% set link = 'https://www.npmjs.com/package/@angular-architects/ddd' %}
    {% set linkText = '@angular-architects/ddd' %}
    {% include 'post-elements/hyper-link.njk' %}
    package is a super popular nx-plugin that automates the initialization of the eslint rules and generates project tags and linting rule adaptions on the fly. 
    It even brings a lot more to the table by applying best practices from DDD, such as separating the data-acess (or domain-logic) layer into more finegrained layers, implementing the facade pattern.
</p>


{% set subSubHeading = 'II. Enterprise Monorepo Angular Patterns' %}
{% include 'post-elements/sub-sub-heading.njk' %}

<p>
    Originally, the Enterprise Monorepo Angular Patterns had been introduced in this 
    {% set link = 'https://go.nrwl.io/angular-enterprise-monorepo-patterns-new-book' %}
    {% set linkText = 'book' %}
    {% include 'post-elements/hyper-link.njk' %}, by Nitin Vericherla and Victor Savkin.
</p>

{% set repo = 'HaasStefan/nx-giant' %}
{% include 'post-elements/repo.njk' %}
